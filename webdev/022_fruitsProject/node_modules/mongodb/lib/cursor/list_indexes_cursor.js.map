ct(toNumber("-00.00")).toEqual(-0);
        expect(toNumber("-0.06")).toEqual(-0.06);
        expect(toNumber("-00.6")).toEqual(-0.6);
        expect(toNumber("-.006")).toEqual(-0.006);
        expect(toNumber("-6.0")).toEqual(-6);
        expect(toNumber("-06.0")).toEqual(-6);
        
        expect(toNumber("-0.0"   ,  { leadingZeros :  false})).toEqual(-0);
        expect(toNumber("-00.00",  { leadingZeros :  false})).toEqual("-00.00");
        expect(toNumber("-0.06",  { leadingZeros :  false})).toEqual(-0.06);
        expect(toNumber("-00.6",  { leadingZeros :  false})).toEqual("-00.6");
        expect(toNumber("-.006",  {leadingZeros :  false})).toEqual(-0.006);
        expect(toNumber("-6.0"  ,  { leadingZeros :  false})).toEqual(-6);
        expect(toNumber("-06.0"  ,  { leadingZeros :  false})).toEqual("-06.0");
    })
    it("long number", () => {
        expect(toNumber("020211201030005811824")  ).toEqual("020211201030005811824");
        expect(toNumber("20211201030005811824")  ).toEqual("20211201030005811824");
        expect(toNumber("20.211201030005811824")  ).toEqual("