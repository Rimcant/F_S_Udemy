# @aws-sdk/middleware-stack

[![NPM version](https://img.shields.io/npm/v/@aws-sdk/middleware-stack/latest.svg)](https://www.npmjs.com/package/@aws-sdk/middleware-stack)
[![NPM downloads](https://img.shields.io/npm/dm/@aws-sdk/middleware-stack.svg)](https://www.npmjs.com/package/@aws-sdk/middleware-stack)

The package contains an implementation of middleware stack interface. Middleware
stack is a structure storing middleware in specified order and resolve these
middleware into a single handler.

A middleware stack has five `Step`s, each of them represents a specific request life cycle:

- **initialize**: The input is being prepared. Examples of typical initialization tasks include injecting default options computing derived parameters.

- **serialize**: The input is complete and ready to be serialized. Examples of typical serialization tasks include input validation and building an HTTP request from user input.

- **build**: The input has been serialized into an HTTP request, but that request may require further modification. Any request alterations will be applied to all retries. Examples of typical build tasks include injecting HTTP headers that describe a stable aspect of the request, such as `Content-Length` or a body checksum.

- **finalizeRequest**: