               }
            }
            const topology = new topology_1.Topology(options.hosts, options);
            // Events can be emitted before initialization is complete so we have to
            // save the reference to the topology on the client ASAP if the event handlers need to access it
            this.topology = topology;
            topology.client = this;
            topology.once(topology_1.Topology.OPEN, () => this.emit('open', this));
            for (const event of constants_1.MONGO_CLIENT_EVENTS) {
                topology.on(event, (...args) => this.emit(event, ...args));
            }
            const topologyConnect = async () => {
                try {
                    await (0, util_1.promisify)(callback => topology.connect(options, callback))();
                }
                catch (error) {
                    topology.close({ force: true });
                    throw error;
                }
            };
            if (this.autoEncrypter) {
                const initAutoEncrypter = (0, util_1.promisify)(callback => { var _a; return (_a = this.autoEncrypter)