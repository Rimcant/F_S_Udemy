import { BaseOperation, EqualsOperation, Options, Operation, Query, NamedGroupOperation } from "./core";
import { Key } from "./utils";
declare class $Ne extends BaseOperation<any> {
    readonly propop = true;
    private _test;
    init(): void;
    reset(): void;
    next(item: any): void;
}
declare class $ElemMatch extends BaseOperation<Query<any>> {
    readonly propop = true;
    private _queryOperation;
    init(): void;
    reset(): void;
    next(item: any): void;
}
declare class $Not extends BaseOperation<Query<any>> {
    readonly propop = true;
    private _queryOperation;
    init(): void;
    reset(): void;
    next(item: any, key: Key, owner: any, root: boolean): void;
}
export declare class $Size extends BaseOperation<any> {
    readonly propop = true;
    init(): void;
    next(item: any): void;
}
declare class $Or extends BaseOperation<any> {
    readonly propop = false;
    private _ops;
    init(): void;
    reset(): void;
    next(item: any, key: Key, owner: any): void;
}
declare class $Nor extends $Or {
    readonly propop = false;
    next(item: any, key: Key, owner: any): void;
}
declare class $In extends BaseOperation<any> {
    readonly propop = true;